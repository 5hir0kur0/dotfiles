#
# wm independent hotkeys
#

# terminal emulator
super + Return
        st

super + shift + Return
        st -f 'Monaco:pixelsize=16'

super + ctrl + Return
        urxvt

# lock screen
ctrl + alt + l
        exit.sh lock; xset dpms force off

# hack for "nested" modes
# MODE: extended: (w)allpaper, (b)ookmark, (s)crot, num + num -> set volume
# super + x

# note that this doesn't seem to work when using {n,p}
# MODE: wallpaper: (n)ext, (p)revious
super + x ; w : n
        set_wallpaper.sh
super + x ; w : p
        set_wallpaper.sh pop

# bookmarks
super + x ; b
        rofibookmarks.sh

# set volume to specific value
super + x ; {0-9} ; {0-9}
        pulse.sh set {0-9}{0-9}

# scrot
# MODE: scrot: (w)indow, (e)verything, (s)election; shift -> 3s delay; ctrl -> copy to clipboard (nosave)
super + x ; s ; w
        screenshot.sh --action=window --show
super + x ; s ; e
        screenshot.sh --action=whole --show
super + x ; s ; s
        sleep 0.2; screenshot.sh --action=select --show
super + x ; s ; shift + w
        screenshot.sh --action=window --show --delay=3
super + x ; s ; shift + e
        screenshot.sh --action=whole --show --delay=3
super + x ; s ; shift + s
        sleep 3; screenshot.sh --action=select --show
super + x ; s ; ctrl + w
        screenshot.sh --action=window --clip --no-save --show
super + x ; s ; ctrl + e
        screenshot.sh --action=whole --clip --no-save --show
super + x ; s ; ctrl + s
        sleep 0.2; screenshot.sh --action=select --clip --no-save --show
super + x ; s ; ctrl + shift + w
        screenshot.sh --action=window --clip --delay=3 --no-save
super + x ; s ; ctrl + shift + e
        screenshot.sh --action=whole --clip --delay=3 --no-save
super + x ; s ; ctrl + shift + s
        sleep 3; screenshot.sh --action=select --clip --no-save

# center focused floating window on screen
super + shift + z
        center_window.sh

# fcitx
~ctrl + alt + space
        pgrep -x fcitx || fcitx -d

# program launcher (rofi)
super + {_,alt +} @space
        rofi -show {drun,run}

# window list (rofi)
super + {_,shift +} g
        rofi -show {window,windowcd}

# make sxhkd reload its configuration files:
super + Escape
        pkill -USR1 -x sxhkd

# scratchpad
super + e
        bspwm_scratchpad.sh terminal

super + shift + e
        bspwm_scratchpad.sh hide

super + u
        bspwm_scratchpad.sh unhide

super + shift + u
        bspwm_scratchpad.sh hide_floating

# exit.sh
# MODE: exit: (l)ock, (e) logout, (s)uspend, (r)eboot, (shift + s)hutdown, (h)ibernate, (ctrl + s) hybrid sleep
super + Pause; {l,e,s,r,shift + s,h,ctrl + s}
        exit.sh {lock,logout,suspend,reboot,shutdown,hibernate,hybrid_sleep}

# volume
XF86AudioRaiseVolume
        pulse.sh up

XF86AudioLowerVolume
        pulse.sh down

XF86AudioMute
        pulse.sh mute

super + F12
        pulse.sh up

super + F11
        pulse.sh down

super + ctrl + F12
        pulse.sh up 1

super + ctrl + F11
        pulse.sh down 1

super + shift + F12
        pulse.sh force_up

super + shift + F11
        pulse.sh force_down

super + F10
        pulse.sh mute

# center cursor
super + ctrl + z
        center_cursor.sh

# disable display
super + F9
        xset dpms force off

# power management
super + F4
        exit.sh shutdown

super + F1
        exit.sh suspend

# network management
super + F2
        nmcli radio wifi | grep enabled && nmcli radio wifi off \
        || nmcli radio wifi on 

super + shift + F2
        nmcli networking | grep enabled && nmcli networking off \
        || nmcli networking on 

# brightness
super + {plus,minus}
        light -Sc 0.5 && light -{A,U} 10

super + {F6,F5}
        light -Sc 0.5 && light -{A,U} 10

super + {button4,button5}
        light -Sc 0.5 && light -{A,U} 5

# surfraw
super + q
        rofisurfraw.sh both

#
# bspwm hotkeys
#

# quit bspwm normally TODO
super + alt + Escape
        bspc quit

# close and kill
super + {shift,ctrl} + q
        bspc node -{c,k}

# alternate between the tiled and monocle layout
super + w
        bspc desktop -l next

super + ctrl + t
        bspc desktop -l tiled

super + ctrl + w
        bspc desktop -l monocle

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + shift + y
        bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + shift + b
        bspc node -s biggest.tiled.local

# toggle border
super + ctrl + shift + b
        bspc config border_width $(( ( $(bspc config border_width) + 1 ) % 6))

super + ctrl + {button4,button5}
        BORDER=$(( $(bspc config border_width) {+,-} 1 )); \
        if [ "$BORDER" -le 0 ]; then \
            bspc config border_width  0; \
        else; \
            bspc config border_width "$BORDER"; \
        fi

super + shift + {button4,button5}
        GAP=$(( $(bspc config window_gap) {+,-} 1 )); \
        if [ "$GAP" -le 0 ]; then \
            bspc config window_gap  0; \
        else; \
            bspc config window_gap "$GAP"; \
        fi

# TODO toggle bar (in some mode)

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
        bspc node -t {tiled,'~pseudo_tiled','~floating','~fullscreen'}

# for compatibility with my i3 config
super + shift + space
        bspc node -t '~floating'

# set the node flags
super + ctrl + {x,s,p}
        bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}
        bspc node -f {west,south,north,east}

# swap the node in the given direction or resize floating node
super + shift + {h,j,k,l}
        ACTIONS11=(-20 0 0 20); \
        ACTIONS12=(0 20 -20 0); \
        ACTIONS2=(west south north east); \
        INDEX={0,1,2,3}; \
        bspc query -N -n .floating.focused.local.leaf && \
        bspc node -v $\{ACTIONS11[$INDEX]\} $\{ACTIONS12[$INDEX]\} || \
        bspc node -s "$\{ACTIONS2[$INDEX]\}"

# MODE: transplant node: h,j,k,l
super + z; {h,j,k,l}
        bspc node -n {west,south,north,east}

# focus the node for the given path jump
# a -> "ancestor" -> parent
super + {a,b,comma,period}
        bspc node -f @{parent,brother,first,second}

# sort of the opposite of super + a
super + shift + a
        bspc node -f @first

# focus the next/previous node in the current desktop
super + {_,shift + }r
        bspc node -f {next,prev}.local

# switch between / focus floating nodes
alt + Tab
        bspc node prev.floating -f

alt + shift + Tab
        bspc node next.floating -f

super + ctrl + space
         bspc query -N -n .floating.focused.local.leaf && \
            bspc node last.tiled.local.leaf -f \
            || bspc node last.floating.local.leaf -f


# focus the next/previous desktop on the current monitor
super + {p,n}
        bspc desktop -f {prev,next}.local && bspwm_workspace.sh reset

# move node to the next/previous desktop on the current monitor
super + shift + {p,n}
        bspc node -d {prev,next}.local

# focus next/previous desktop on any monitor
super + {_,ctrl} + m
        bspc desktop -f {next,prev} && bspwm_workspace.sh reset

# move node to next/previous desktop
super + shift + {_,ctrl} + m
        bspc node -d {next,prev}

# focus the older or newer node in the focus history
super + {o,i}
        bspc wm -h off; \
        bspc node {older,newer} -f; \
        bspc wm -h on

# focus the older or newer node in the focus history on current desktop
super + shift + {o,i}
        bspc wm -h off; \
        bspc node {older,newer}.local -f; \
        bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
        bspwm_workspace.sh {switch,move} '{1-9,10}'

super + {_, shift + }c
        bspwm_workspace.sh {switch,move}_new

# focus or send to last desktop
super + {_, shift + } Tab
        bspc {desktop -f,node -d} last

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
        bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
        bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + c
        bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
        bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward or make it smaller if 
# this isn't possible
super + alt + {h,j,k,l}
        ACTION=('left -20 0' 'bottom 0 20' 'top 0 -20' 'right 20 0'); \
        ALTERNATIVE=('right -20 0' 'top 0 20' 'bottom 0 -20' 'left 20 0'); \
        INDEX={0,1,2,3}; \
        bspc node -z $\{ACTION[$INDEX]\} || bspc node -z $\{ALTERNATIVE[$INDEX]\}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
        bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
        bspc node -v {-20 0,0 20,0 -20,20 0}


#
# do strange stuff that i3 can't do
#
super + shift + f
        bspc query -N -n .leaf.focused.local && bspc node @/ --flip vertical || \
        bspc node --flip vertical

super + ctrl + f
        bspc query -N -n .leaf.focused.local && bspc node @/ --flip horizontal || \
        bspc node --flip horizontal

super + ctrl + r
        bspc query -N -n .leaf.focused.local && bspc node @/ --rotate 90 || \
        bspc node --rotate 90

super + ctrl + e
        bspc query -N -n .leaf.focused.local && bspc node @/ --equalize || \
        bspc node --equalize 

super + ctrl + b
        bspc query -N -n .leaf.focused.local && bspc node @/ --balance || \
        bspc node --balance 
