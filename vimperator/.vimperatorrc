" vi: ft=vim

" limit gui to tabs
set gui=none,tabs
" show numbers on tabs
set tabnumbers
" disable scroll bars
set noscrollbars
colorscheme darkness_custom

" set hintchars=hjklasdfgzuiopqwertnmyxcvb
set hintchars=sadfjklewcmpgh
" maximum number of items to display at once in a listing
set maxitems=12

" fix reddit
set hinttags+='| //div[contains(@class, "expando-button")]'

" zoom shortcuts
noremap <C-+> zI
noremap <C--> zO
noremap <C-0> zz
" new private window (and prompt for URL)
noremap <C-S-n> :winopen -private 
" the trailing space is there on purpose
noremap <C-m> :emenu 
" in theory, gr should do the same, but it doesn't always work
noremap <C-l> :emenu View.Enter Reader View<CR>
" some useful vimium bindings
noremap x d
noremap J gT
noremap K gt
" duplicate current tab
noremap <silent> gd :tabduplicate<CR>
" move current tab to a certain position
noremap <silent> gm0 :tabmove 0<CR>
noremap <silent> gm1 :tabmove 1<CR>
noremap <silent> gm2 :tabmove 2<CR>
noremap <silent> gm3 :tabmove 3<CR>
noremap <silent> gm4 :tabmove 4<CR>
noremap <silent> gm5 :tabmove 5<CR>
noremap <silent> gm6 :tabmove 6<CR>
noremap <silent> gm7 :tabmove 7<CR>
noremap <silent> gm8 :tabmove 8<CR>
noremap <silent> gm9 :tabmove 9<CR>
" move current tab to the end
noremap <silent> gm$ :tabmove<CR>
noremap <silent> gmm :tabmove<CR>
" move current tab to the left/right
noremap <silent> gmp :tabmove -1<CR>
noremap <silent> gmN :tabmove +1<CR>
noremap <silent> gmn :tabmove +1<CR>
" make c-p and c-n behave like arrow keys in command mode
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
" new tab
noremap <silent> gn :tabnew<CR>
" close tab
noremap <silent> gc :tabclose<CR>
" move current tab to new window
noremap <silent> gw :tabdetach<CR>
" move current tab to existing window (trailing whitespace is there on
" purpose)
noremap <silent> gW :tabattach 


" toggle navigation bar
noremap <silent> zn :set gui=invnavigation<CR>

" toggle tab bar
noremap <silent> zt :set gui=invtabs<CR>

" toggle menu bar (NOTE: this conflicts with the text zoom mapping zm, which I
" don't use. I prefer the full zoom version: zM)
noremap <silent> zm :set gui=invmenu<CR>

" toggle addon bar
noremap <silent> za :set gui=invaddons<CR>

" stolen from http://superuser.com/a/706543
noremap <silent> zb :js toggle_bottombar()<CR>
:js << EOF
function toggle_bottombar() {
    var bb = document.getElementById('liberator-bottombar');
    if (!bb)
        return;
    bb.style.height = (bb.style.height == '') ? '0px' : '';
    bb.style.overflow = (bb.style.height == '') ? '' : 'hidden';
}
EOF

" youtube "fullscreen" mode (open videos in embed mode)

" open current youtube video or playlist in embedded mode in current tab
noremap -urls '^https?:\/\/(?:[^.]+.)?youtube.com\/watch\?.*v=.+' <silent> ge :js open_yt_embedded(liberator.CURRENT_TAB)<CR>
" open current youtube video or playlist in embedded mode in new tab
noremap -urls '^https?:\/\/(?:[^.]+.)?youtube.com\/watch\?.*v=.+' <silent> gE :js open_yt_embedded(liberator.NEW_TAB)<CR>

:js << EOF
function open_yt_embedded(open_arg_where) {
    var base = "https://www.youtube.com/embed/";
    var end = "&autoplay=1"
    var current_id = liberator.modules.buffer.URL;
    var regex = /^https?:\/\/(?:[^.]+.)?youtube.com\/watch\?.*v=(.+)$/;
    if (current_id.match(regex)) {
        var new_url = current_id.replace(regex, base + "$1" + end);
        // in playlists, we need to replace & with ?
        if (new_url.indexOf("&") >= 0) new_url = new_url.replace("&", "?");
        liberator.open(new_url, { "where": open_arg_where });
    }
}
EOF

ignorekeys add -except=:,d,D,x,f,t,T,o,O,w,W,g,G,z,H,L,r,0,1,2,3,4,5,6,7,8,9 '^https?://www.youtube.com/embed/.+'
ignorekeys add -except=:,d,D,h,x,t,T,o,O,w,W,g,G,z,H,L,r,0,1,2,3,4,5,6,7,8,9,<c-s-n>,<c-n>,<c-p>,<c-d>,<c-u>,<c-f>,<c-b> '^https?://www.youtube.com/watch.+'
