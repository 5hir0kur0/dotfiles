# send prefix
set-option -g prefix M-Space
unbind-key C-b
bind-key M-Space send-prefix

# stop tmux from causing an "escape-delay"
set -s escape-time 0

# fix cursor rendering in neovim (see :h 'guicursor' in neovim)
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# use alt-arrow/vim keys to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# move around without prefix
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D

# move to next/previous window
bind-key -n M-n next-window
bind-key -n M-p previous-window

# move to next/previous window
bind-key -n M-N switch-client -n

# resize panes without prefix
bind-key -n M-H resize-pane -L 1
bind-key -n M-L resize-pane -R 1
bind-key -n M-J resize-pane -D 1
bind-key -n M-K resize-pane -U 1

# select windows without prefix
bind-key -n M-0 select-window -t :0
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# open new pane
bind-key -n M-o split-window -v -c '#{pane_current_path}'
bind-key -n M-O split-window -h -c '#{pane_current_path}'

# open new pane (entire view is split)
bind-key -n M-e split-window -fv -c '#{pane_current_path}'
bind-key -n M-E split-window -fh -c '#{pane_current_path}'

# swap pane
bind-key -n M-\{ swap-pane -U
bind-key -n M-\} swap-pane -D

# join ("move") pane
bind-key -n M-m command-prompt -p "join pane to:"  "join-pane -t ':%%'"

# break pane (create new window with current pane)
bind-key -n M-B break-pane

# move window
bind-key -n M-M command-prompt "move-window -t '%%'"

# rotate panes
bind-key M-r rotate-window

# type simultaneously in all panes
bind-key M-s set-window-option synchronize-panes\; display-message "turned pane-syncing #{?pane_synchronized,on,off}"

# rename window
bind-key -n M-r command-prompt "rename-window '%%'"

# rename current session
bind-key -n M-R command-prompt "rename-session '%%'"

# zoom/fullscreen window
bind-key -n M-F resize-pane -Z

# new window
bind-key -n M-c new-window

# new session
bind-key -n M-C new-session
# (the above binding somehow doesn't work...)
bind-key C new-session

# select session
bind-key -n M-S choose-tree

# kill pane
bind-key -n M-q kill-pane

# kill window
bind-key -n M-Q confirm kill-window

# kill session
bind-key -n M-X confirm kill-session

# tmux command prompt
bind-key -n M-: command-prompt

# mouse mode
set -g mouse on

# limit scrolling
set -g history-limit 42000

# clear scrollback
bind-key M-c clear-history\; display-message "history cleared"

# (old binding; M-c is more convenient to press)
bind-key C-c clear-history\; display-message "history cleared"

# enter copy-mode (think of "yank")
bind-key -n M-Y copy-mode

# show message buffer (cf. ranger's W)
bind-key -n M-W show-messages

# choose buffer to paste from list
bind-key -n M-P choose-buffer

# show clock / enter clock mode
bind-key -n M-T clock-mode
set -g clock-mode-style 24 # use 24-hour clock

# "big" resize
bind-key M-h resize-pane -L 5
bind-key M-l resize-pane -R 5
bind-key M-j resize-pane -D 5
bind-key M-k resize-pane -U 5

# man lookup
bind-key M command-prompt -p "man:" "split-window 'exec man %%'"
bind-key M-M command-prompt -p "man:" "split-window 'exec man %%'"

# use vi-like keybindings
set -g mode-keys vi

# move current pane to another window
bind-key j command-prompt -p "join pane to:"  "join-pane -t ':%%'"

# easy config reload
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded."


# set base-index to 1
set -g base-index 1
set-window-option -g pane-base-index 1

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# lengthen amount of time status messages are displayed
set-option -g display-time 1500
set-option -g display-panes-time 3000

# fix vim colorscheme
# (set terminal to tmux to enable italics)
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

# copy to system clipboard clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel -i"\; send-keys -X clear-selection\; display-message "copied to primary selection"
bind-key -T copy-mode-vi Y send-keys -X copy-pipe "xsel -i -b"\; send-keys -X clear-selection\; display-message "copied to clipboard selection"

# copy to the system clipboard and exit copy-mode
bind-key -T copy-mode-vi M-y send-keys -X copy-pipe-and-cancel "xsel -i"\; display-message "copied to primary selection"
bind-key -T copy-mode-vi M-Y send-keys -X copy-pipe-and-cancel "xsel -i -b"\; display-message "copied to clipboard selection"

# begin selection in vi mode using v
bind-key -T copy-mode-vi v send-keys -X begin-selection
# use visual block selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# access cliboard
bind-key p run-shell 'tmux set-buffer -b primary "`xsel -o`"\; paste-buffer -b primary'
bind-key P run-shell 'tmux set-buffer -b clipboard "`xsel -bo`"\; paste-buffer -b clipboard'


# monitor bells and activity
set-window-option -g monitor-bell on
#set-window-option -g monitor-activity on


## THEME
## adapted from: https://github.com/egel/tmux-gruvbox
## COLORSCHEME: gruvbox dark
set-option -g status "on"

# 256 colors
bg0=colour235
bg1=colour237
bg2=colour239
bg3=colour241
bg4=colour243
fg0_h=colour230
fg0=colour229
fg1=colour223
fg2=colour250
fg3=colour248
fg4=colour246
red=colour167 # bright red
#red=colour124 # neutral red
#yellow=colour214 # bright yellow
yellow=colour172 # neutral yellow

# true color (gruvbox)
#bg0="#282828"
#bg1="#3c3836"
#bg2="#504945"
#bg3="#665c54"
#bg4="#7c6f64"
#fg0_h="#f9f5d7"
#fg0="#fbf1c7"
#fg1="#ebdbb2"
#fg2="#d5c4a1"
#fg3="#bdae93"
#fg4="#a89984"
#red="#fb4934"
#yellow="#fabd2f"

# default statusbar colors
set-option -g status-bg $bg1
set-option -g status-fg $fg1

# default window title colors
set-window-option -g window-status-style bg=$fg3,fg=$bg1

# bell
set-window-option -g window-status-bell-style fg=$bg0,bg=$red

# activity
set-window-option -g window-status-activity-style fg=$bg1,bg=$yellow

# active window title colors
set-window-option -g window-status-current-format bg=default,fg=$bg1

# pane border
set-option -g pane-active-border-style fg=$fg2
set-option -g pane-border-style fg=$bg4

# message infos
set-option -g message-style bg=$bg2,fg=$fg0_h

# writting commands inactive
set-option -g message-command-style bg=$bg2,fg=$fg0_h

# pane number display
set-option -g display-panes-active-colour $fg0_h
set-option -g display-panes-colour $fg4

# clock
set-window-option -g clock-mode-colour $fg3

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-length "80"
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=$fg3, bg=$bg3] #S #[fg=$fg1, bg=$bg1, nobold, noitalics, nounderscore] "

set-option -g status-right "#[fg=$bg2, bg=$bg1, nobold, nounderscore, noitalics]#[fg=$fg4,bg=$bg2] %Y-%m-%d #[fg=$fg3,bg=$bg3] %H:%M #[fg=$fg2, bg=$bg4] #h "

# current
set-window-option -g window-status-current-style fg=$bg1,bg=$fg3,nobold,noitalics,nounderscore
set-window-option -g window-status-current-format " #I:#{?window_zoomed_flag,#[bold],}#W#[nobold] #[fg=$fg1, bg=$bg1, nobold] "

# other windows
set-window-option -g window-status-style fg=$fg2,bg=$bg2,noitalics
set-window-option -g window-status-format " #{?window_last_flag,#[underscore],}#I#[nounderscore]:#W #[fg=$fg1, bg=$bg1] "

# visual mode, etc
set-option -g mode-style bg=$fg2,fg=$bg0

## / THEME

## INSERT MODE

# create a sort of "insert mode" where all key bindings except the prefix key
# are forwarded to the programs running inside tmux
unbind-key i # previously: display-message, but I don't use that
# use prefix Escape to get out of "insert mode"
# all root key bindings are made available in a prefixed version
bind-key i unbind-key -T root -a\; \
    set-option -g status-right "#[fg=$fg1,bg=$bg1,bold,nounderscore,noitalics][INSERT] #[nobold,fg=$fg4,bg=$bg2] %Y-%m-%d #[fg=$fg3,bg=$bg3] %H:%M #[fg=$fg2, bg=$bg4] #h "
# alternative for indicator: set-option -ag status-right "#[fg=$bg2,bg=$fg2, bold] [INSERT] #[nobold]"
bind-key Escape source-file ~/.tmux.conf\; display-message -- " -- NORMAL --"

# the above has the unfortunate effect of also deleting mouse bindings
# so they are listed here (so they get reloaded when exiting "insert mode")
# (the following was generated using
# tmux -f /dev/null -L temp start-server \; set -g mouse on \; list-keys | grep -i mouse
# )
bind-key    -T copy-mode    MouseDown1Pane    select-pane
bind-key    -T copy-mode    MouseDrag1Pane    select-pane \; send-keys -X begin-selection
bind-key    -T copy-mode    MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi MouseDown1Pane    select-pane
bind-key    -T copy-mode-vi MouseDrag1Pane    select-pane \; send-keys -X begin-selection
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
bind-key    -T root         MouseDown1Pane    select-pane -t = \; send-keys -M
bind-key    -T root         MouseDown1Status  select-window -t =
bind-key    -T root         MouseDown3Pane    if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
bind-key    -T root         MouseDrag1Pane    if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind-key    -T root         MouseDrag1Border  resize-pane -M
bind-key    -T root         WheelUpPane       if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""

## / INSERT MODE

# restore layout bindings when switching back to NORMAL mode
bind-key  M-1  select-layout even-horizontal
bind-key  M-2  select-layout even-vertical
bind-key  M-3  select-layout main-horizontal
bind-key  M-4  select-layout main-vertical
bind-key  M-5  select-layout tiled

# vi: ft=tmux
