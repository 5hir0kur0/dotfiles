let ghciEscapeShellArg arg = "'" ++ concatMap (\x -> if x == '\'' then "'\"'\"'" else [x]) arg ++ "'"
:def! search return . (":! hoogle --color --count=20 " ++) . ghciEscapeShellArg
:def! doc return . (":! hoogle --info " ++) . ghciEscapeShellArg
:set -fprint-unicode-syntax
:set -fprint-explicit-foralls
:set -fprint-explicit-kinds
-- prompt
:set prompt "\ESC[38;5;208m\STXÎ»>\ESC[m\STX "
-- error messages
:set -ferror-spans -freverse-errors -fprint-expanded-synonyms
-- :set -Wall
